<?php
class AuthController {
    private $db;
    private $session;
    private $user;
    
    public function __construct($db, $session) {
        $this->db = $db;
        $this->session = $session;
        $this->user = new User($db);
    }
    
    // Show login form
    public function showLoginForm() {
        include 'views/auth/login.php';
    }
    
    // Show registration form
    public function showRegisterForm() {
        include 'views/auth/register.php';
    }
    
    // Process login
    public function login() {
        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            $login = $_POST['login'] ?? '';
            $password = $_POST['password'] ?? '';
            $remember = isset($_POST['remember']);
            
            // Validate input
            if (empty($login) || empty($password)) {
                $this->session->setFlash('error', 'Please enter both login and password.');
                include 'views/auth/login.php';
                return;
            }
            
            // Get user by username or email
            $user = $this->user->findByUsernameOrEmail($login);
            
            // Verify credentials
            if ($user && verifyPassword($password, $user['password'])) {
                // Set user session
                $this->session->setUser($user);
                
                // Handle remember me
                if ($remember) {
                    $token = generateToken();
                    $expires = date('Y-m-d H:i:s', strtotime('+30 days'));
                    
                    // Set user_id property for the model
                    $this->user->user_id = $user['user_id'];
                    
                    if ($this->user->saveRememberToken($token, $expires)) {
                        setcookie('remember_token', $token, strtotime('+30 days'), '/');
                    }
                }
                
                // Redirect to home page
                header('Location: index.php');
                exit;
            } else {
                $this->session->setFlash('error', 'Invalid login credentials.');
                include 'views/auth/login.php';
            }
        } else {
            include 'views/auth/login.php';
        }
    }
    
    // Process registration
    public function register() {
        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            $username = $_POST['username'] ?? '';
            $email = $_POST['email'] ?? '';
            $password = $_POST['password'] ?? '';
            $password_confirm = $_POST['password_confirm'] ?? '';
            $first_name = $_POST['first_name'] ?? '';
            $last_name = $_POST['last_name'] ?? '';
            
            // Validate input
            $errors = [];
            
            if (empty($username)) {
                $errors[] = 'Username is required.';
            } else if ($this->user->usernameExists($username)) {
                $errors[] = 'Username already exists.';
            }
            
            if (empty($email)) {
                $errors[] = 'Email is required.';
            } else if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
                $errors[] = 'Invalid email format.';
            } else if ($this->user->emailExists($email)) {
                $errors[] = 'Email already exists.';
            }
            
            if (empty($password)) {
                $errors[] = 'Password is required.';
            } else if (strlen($password) < 6) {
                $errors[] = 'Password must be at least 6 characters.';
            } else if ($password !== $password_confirm) {
                $errors[] = 'Passwords do not match.';
            }
            
            if (empty($first_name)) {
                $errors[] = 'First name is required.';
            }
            
            if (empty($last_name)) {
                $errors[] = 'Last name is required.';
            }
            
            // If validation fails, show form with errors
            if (!empty($errors)) {
                $this->session->setFlash('errors', $errors);
                include 'views/auth/register.php';
                return;
            }
            
            // Create user
            $this->user->username = $username;
            $this->user->email = $email;
            $this->user->password = hashPassword($password);
            $this->user->first_name = $first_name;
            $this->user->last_name = $last_name;
            
            if ($this->user->create()) {
                $this->session->setFlash('success', 'Registration successful! Please log in.');
                header('Location: index.php?page=auth&action=login');
                exit;
            } else {
                $this->session->setFlash('error', 'Registration failed. Please try again.');
                include 'views/auth/register.php';
            }
        } else {
            include 'views/auth/register.php';
        }
    }
    
    // Process logout
    public function logout() {
        // Delete remember me cookie and token
        if (isset($_COOKIE['remember_token'])) {
            $this->user->deleteRememberToken($_COOKIE['remember_token']);
            setcookie('remember_token', '', time() - 3600, '/');
        }
        
        // Clear session
        $this->session->clearSession();
        
        // Redirect to login page
        header('Location: index.php?page=auth&action=login');
        exit;
    }
    
    // Login with remember token
    public function loginWithRememberToken($token) {
        $user = $this->user->findByRememberToken($token);
        
        if ($user) {
            $this->session->setUser($user);
            return true;
        }
        
        return false;
    }
}
?>
